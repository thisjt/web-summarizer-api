import app from '../lib/app';
import { z, createRoute } from '@hono/zod-openapi';

const TokenSchema = z.object({
	token: z.coerce.string().openapi({
		title: 'Authentication Token',
		description: 'Token used to access this API.',
		type: 'string',
		format: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
		example: 'mYpoDaKd5RNTbYceRgKD9b3gAymKqYBk',
	}),
});

const IdSchema = z.object({
	id: z.coerce.number().openapi({
		title: 'Job ID',
		description: 'Specify this parameter to grab the details of your Job ID.',
		type: 'number',
		format: '#',
		example: 68,
	}),
});

export const JobDetails = z.object({
	id: z.number().openapi({
		title: 'Job ID',
		description: 'The ID of the job.',
		type: 'number',
	}),
	url: z.string().startsWith('https://').openapi({
		title: 'URL',
		description: 'URL that is or will be summarized.',
		type: 'string',
		format: 'https://[domain]/[path]',
		example: 'https://thisjt.me/portfolio/968-imposs',
	}),
	status: z.string().openapi({
		title: 'Job Status',
		description: 'The status of this job.',
		type: 'string',
	}),
	summary: z.string().optional().openapi({
		title: 'Summary',
		description: 'The summary that was generated by the LLM while summarizing the URL.',
		type: 'string',
	}),
	summary_logs: z.string().optional().openapi({
		title: 'Job Summary Logs',
		description: 'Shows logs generated during the summarizing of the page. Used for debugging purposes.',
		type: 'string',
	}),
	summary_error_message: z.string().optional().openapi({
		title: 'Job Summary Error',
		description: "If something failed during the summarizing of the page, you'll see the reason why here.",
		type: 'string',
	}),
	timestamp: z.coerce.number().openapi({
		title: 'Time Created',
		description: 'The time the job was created.',
		type: 'number',
	}),
	started: z.coerce.number().optional().openapi({
		title: 'Time Started',
		description: 'The time the job was picked up by the queue and started.',
		type: 'number',
	}),
	finished: z.coerce.number().optional().openapi({
		title: 'Time Finished',
		description: 'The time the job was finished.',
		type: 'number',
	}),
});

// const route = createRoute({
// 	method: 'get',
// 	path: '/job/{id}',
// 	request: {
// 		params:
// 	}
// })

const getjob = app.get('/job/{id}', (c) => {
	return c.text('Get Job!');
});

export default getjob;

/*
select: {
	id: true,
	url: true,
	status: true,
	summary: true,
	summary_error_message: true,
	timestamp: true,
},
*/
