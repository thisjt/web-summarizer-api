import { z } from '@hono/zod-openapi';

export const JobDetails = z
	.object({
		id: z.number().openapi({
			title: 'Job ID',
			description: 'The ID of the job.',
			type: 'number',
			example: 68,
		}),
		url: z.string().startsWith('https://').openapi({
			title: 'URL',
			description: 'URL that is or will be summarized.',
			type: 'string',
			format: 'https://[domain]/[path]',
			example: 'https://www.iana.org/help/example-domains',
		}),
		status: z.string().openapi({
			title: 'Job Status',
			description: 'The status of this job.',
			type: 'string',
			example: 'completed',
		}),
		summary: z
			.string()
			.nullable()
			.optional()
			.openapi({
				title: 'Summary',
				description: 'The summary that was generated by the LLM while summarizing the URL.',
				type: 'string',
				example:
					'We provide a web service on the example domain hosts to provide basic the example domains ' +
					'to have operating HTTP service. available for registration or transfer. The IANA functions ' +
					"coordinate the Internet's globally unique identifiers, and the IANA is used to register and " +
					'transfer domain names.',
			}),
		summary_logs: z.string().nullable().optional().openapi({
			title: 'Job Summary Logs',
			description: 'Shows logs generated during the summarizing of the page. Used for debugging purposes.',
			type: 'string',
			example: '7:16:51 AM: Starting job id 68\n7:16:51 AM: Scraping page\n7:16:51 AM: Opening browser',
		}),
		summary_error_message: z.string().nullable().optional().openapi({
			title: 'Job Summary Error',
			description: "If something failed during the summarizing of the page, you'll see the reason why here.",
			type: 'string',
			example: '',
		}),
		timestamp: z.coerce.number().openapi({
			title: 'Time Created (UNIX_TIMESTAMP)',
			description: 'The time the job was created.',
			type: 'number',
			example: 1728624263992,
		}),
		started: z.coerce.number().nullable().optional().openapi({
			title: 'Time Started (UNIX_TIMESTAMP)',
			description: 'The time the job was picked up by the queue and started.',
			type: 'number',
			example: 1728624270451,
		}),
		finished: z.coerce.number().nullable().optional().openapi({
			title: 'Time Finishe (UNIX_TIMESTAMP)d',
			description: 'The time the job was finished.',
			type: 'number',
			example: 1728624285451,
		}),
	})
	.openapi('Job');

export const JobCreate = z
	.object({
		url: z.string().startsWith('https://').openapi({
			title: 'URL',
			description: 'URL that is or will be summarized.',
			type: 'string',
			format: 'https://[domain]/[path]',
			example: 'https://www.iana.org/help/example-domains',
		}),
	})
	.openapi('Create Job');
